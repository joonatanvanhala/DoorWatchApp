package com.example.doorwatchapp;

import android.graphics.BitmapFactory;
import android.util.Base64;
import android.view.View;


import com.amazonaws.services.iot.client.AWSIotMessage;
import com.amazonaws.services.iot.client.AWSIotQos;
import com.amazonaws.services.iot.client.AWSIotTopic;

import static com.example.doorwatchapp.MainActivity.image;
import static com.example.doorwatchapp.MainActivity.showViewContent;

public class IotTopic extends AWSIotTopic {
    public IotTopic(String topic, AWSIotQos qos) {
        super(topic, qos);
    }

    @Override
    public void onMessage(AWSIotMessage message) {
        // called when a message is received
        System.out.println("message received");
        // Parse string and decode it to image
        // Set decoded image as imageView's image
        //String base64Image = message.getStringPayload().split(",")[1];
        //System.out.println(base64Image);
        //String base = "data:image/jpeg;base64," + base64Image;
        System.out.println(message.getStringPayload());
        String baseTest = "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";

        byte[] imageAsBytes = Base64.decode(baseTest.getBytes(), Base64.DEFAULT);
        image.setImageBitmap(BitmapFactory.decodeByteArray(imageAsBytes, 0, imageAsBytes.length));
    }
}
